# Production Docker Compose Configuration
# Use this for production deployments with enhanced security and performance

version: '3.8'

services:
  muscle-exercises-api:
    build: .
    container_name: muscle-exercises-api-prod
    ports:
      - "8000:8000"
    volumes:
      - ./gifs:/app/gifs:ro
      - api_logs:/app/logs
      - /etc/localtime:/etc/localtime:ro  # Sync timezone
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
      - WORKERS=4
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    networks:
      - api_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: muscle-exercises-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./gifs:/usr/share/nginx/html/gifs:ro
      - ./website:/usr/share/nginx/html/website:ro
      - nginx_logs:/var/log/nginx
      - /etc/localtime:/etc/localtime:ro
      # Add SSL certificates here if using HTTPS
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      muscle-exercises-api:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - api_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Add monitoring with Prometheus and Grafana
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #   networks:
  #     - api_network

volumes:
  api_logs:
    driver: local
  nginx_logs:
    driver: local
  # prometheus_data:
  #   driver: local

networks:
  api_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
